//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18408
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MinerClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EnterName", ReplyAction="http://tempuri.org/IService1/EnterNameResponse")]
        bool EnterName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EnterName", ReplyAction="http://tempuri.org/IService1/EnterNameResponse")]
        System.Threading.Tasks.Task<bool> EnterNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NewGame", ReplyAction="http://tempuri.org/IService1/NewGameResponse")]
        void NewGame(string name, int N, int M, int numBombs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NewGame", ReplyAction="http://tempuri.org/IService1/NewGameResponse")]
        System.Threading.Tasks.Task NewGameAsync(string name, int N, int M, int numBombs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Click", ReplyAction="http://tempuri.org/IService1/ClickResponse")]
        int Click(string name, int N, int M);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Click", ReplyAction="http://tempuri.org/IService1/ClickResponse")]
        System.Threading.Tasks.Task<int> ClickAsync(string name, int N, int M);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Exit", ReplyAction="http://tempuri.org/IService1/ExitResponse")]
        void Exit(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Exit", ReplyAction="http://tempuri.org/IService1/ExitResponse")]
        System.Threading.Tasks.Task ExitAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MinerClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MinerClient.ServiceReference1.IService1>, MinerClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool EnterName(string name) {
            return base.Channel.EnterName(name);
        }
        
        public System.Threading.Tasks.Task<bool> EnterNameAsync(string name) {
            return base.Channel.EnterNameAsync(name);
        }
        
        public void NewGame(string name, int N, int M, int numBombs) {
            base.Channel.NewGame(name, N, M, numBombs);
        }
        
        public System.Threading.Tasks.Task NewGameAsync(string name, int N, int M, int numBombs) {
            return base.Channel.NewGameAsync(name, N, M, numBombs);
        }
        
        public int Click(string name, int N, int M) {
            return base.Channel.Click(name, N, M);
        }
        
        public System.Threading.Tasks.Task<int> ClickAsync(string name, int N, int M) {
            return base.Channel.ClickAsync(name, N, M);
        }
        
        public void Exit(string name) {
            base.Channel.Exit(name);
        }
        
        public System.Threading.Tasks.Task ExitAsync(string name) {
            return base.Channel.ExitAsync(name);
        }
    }
}
